steps:

# This step runs the unit tests on the app
- name: 'python:3.7-slim'
  id: Test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install flask; pip install redis && python test_app.py -v'
  
# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/flask-app-repository/my-app:$SHORT_SHA'
  - '.'

#  - '--build-arg'
#  - 'REDIS_HOST=redis-test-master.default.svc.cluster.local'
#  - 'REDIS_PORT=6379'
#  - 'REDIS_PASSWORD=${_REDIS_PASSWORD}'

# This step pushes the image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/flask-app-repository/my-app:$SHORT_SHA'

#This steps clones the env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git clone https://${_MY_GITHUB_KEY}@github.com/mustafakucuk-dev/Codeway-Testcase-Env.git && \
    cd Codeway-Testcase-Env && \
    git checkout candidate
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > Codeway-Testcase-Env/kubernetes.yaml

# This step pushes the manifest back to flask-cloudbuild-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd Codeway-Testcase-Env && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image europe-west3-docker.pkg.dev/$PROJECT_ID/flask-app-repository/my-app:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository my-app
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate
